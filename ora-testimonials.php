<?php
/*
Plugin Name: Ora Testimonials
Plugin URI: https://github.com/macbookandrew/Ora-Wellness-Plugins
Description: Adds custom post type for testimonials
Version: 1.5.2
Author: Andrew Minion/Pressed Solutions
Author URI: http://www.pressedsolutions.com
Text Domain: genesis
*/

if (!defined('ABSPATH')) {
    exit;
}

if ( ! function_exists('ora_testimonial') ) {

// Register Custom Post Type
function ora_testimonial() {

    $labels = array(
        'name'                  => _x( 'Testimonials', 'Post Type General Name', 'genesis' ),
        'singular_name'         => _x( 'Testimonial', 'Post Type Singular Name', 'genesis' ),
        'menu_name'             => __( 'Testimonials', 'genesis' ),
        'name_admin_bar'        => __( 'Testimonial', 'genesis' ),
        'parent_item_colon'     => __( 'Parent Testimonial:', 'genesis' ),
        'all_items'             => __( 'All Testimonials', 'genesis' ),
        'add_new_item'          => __( 'Add New Testimonial', 'genesis' ),
        'add_new'               => __( 'Add New', 'genesis' ),
        'new_item'              => __( 'New Item', 'genesis' ),
        'edit_item'             => __( 'Edit Item', 'genesis' ),
        'update_item'           => __( 'Update Testimonial', 'genesis' ),
        'view_item'             => __( 'View Testimonial', 'genesis' ),
        'search_items'          => __( 'Search Testimonial', 'genesis' ),
        'not_found'             => __( 'Not found', 'genesis' ),
        'not_found_in_trash'    => __( 'Not found in Trash', 'genesis' ),
        'items_list'            => __( 'Testimonials list', 'genesis' ),
        'items_list_navigation' => __( 'Testimonials list navigation', 'genesis' ),
        'filter_items_list'     => __( 'Filter testimonials list', 'genesis' ),
    );
    $rewrite = array(
        'slug'                  => 'testimonials',
        'with_front'            => true,
        'pages'                 => true,
        'feeds'                 => true,
    );
    $args = array(
        'label'                 => __( 'Testimonial', 'genesis' ),
        'description'           => __( 'Testimonial', 'genesis' ),
        'labels'                => $labels,
        'supports'              => array( 'title', 'editor', 'thumbnail', 'custom-fields', 'page-attributes', ),
        'hierarchical'          => true,
        'public'                => true,
        'show_ui'               => true,
        'show_in_menu'          => true,
        'menu_position'         => 5,
        'menu_icon'             => 'dashicons-testimonial',
        'show_in_admin_bar'     => true,
        'show_in_nav_menus'     => true,
        'can_export'            => true,
        'has_archive'           => 'testimonials',
        'exclude_from_search'   => false,
        'publicly_queryable'    => true,
        'rewrite'               => $rewrite,
        'capability_type'       => 'page',
    );
    register_post_type( 'testimonial', $args );

}
add_action( 'init', 'ora_testimonial', 0 );

function ora_flush_rewrite_rules() {
    ora_testimonial();
    flush_rewrite_rules();
}
register_activation_hook( __FILE__, 'ora_flush_rewrite_rules' );

}

/**
 * Generated by the WordPress Meta Box generator
 * at http://jeremyhixon.com/tool/wordpress-meta-box-generator/
 */

function personal_info_get_meta( $value ) {
    global $post;

    $field = get_post_meta( $post->ID, $value, true );
    if ( ! empty( $field ) ) {
        return is_array( $field ) ? stripslashes_deep( $field ) : stripslashes( wp_kses_decode_entities( $field ) );
    } else {
        return false;
    }
}

function personal_info_add_meta_box() {
    add_meta_box(
        'personal_info-personal-info',
        __( 'Personal Info', 'personal_info' ),
        'personal_info_html',
        'testimonial',
        'normal',
        'high'
    );
}
add_action( 'add_meta_boxes', 'personal_info_add_meta_box' );

function personal_info_html( $post) {
    wp_nonce_field( '_personal_info_nonce', 'personal_info_nonce' ); ?>

    <p>
        <label for="personal_info_location"><?php _e( 'Location', 'personal_info' ); ?></label><br>
        <input type="text" name="personal_info_location" id="personal_info_location" value="<?php echo personal_info_get_meta( 'personal_info_location' ); ?>" placeholder="Michigan">
    </p>
    <p>
        <label for="show_on_home"><?php _e( 'Stick to Home Page?', 'personal_info' ); ?></label><br>
        <input type="checkbox" name="show_on_home" id="show_on_home" <?php if ( personal_info_get_meta( 'show_on_home' ) ) { echo 'checked="checked"'; } ?>>
    </p>
    <p>Add a photo using &ldquo;Featured Image&rdquo; to the right.</p><?php
}

function personal_info_save( $post_id ) {
    if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) return;
    if ( ! isset( $_POST['personal_info_nonce'] ) || ! wp_verify_nonce( $_POST['personal_info_nonce'], '_personal_info_nonce' ) ) return;
    if ( ! current_user_can( 'edit_post', $post_id ) ) return;

    if ( isset( $_POST['personal_info_location'] ) ) {
        update_post_meta( $post_id, 'personal_info_location', esc_attr( $_POST['personal_info_location'] ) );
    }

    if ( isset( $_POST['show_on_home'] ) ) {
        update_post_meta( $post_id, 'show_on_home', 'true' );
    } else {
        update_postmeta( $post_id, 'show_on_home', 'false' );
    }
}
add_action( 'save_post', 'personal_info_save' );

/*
    Usage: personal_info_get_meta( 'personal_info_location' )
*/

/**
 * Sidebar Widget showing one random testimonial
 */
wp_register_sidebar_widget(
    'ora-random-testimonial-widget',
    'Ora Random Testimonial',
    'ora_display_random_testimonial_widget',
    array(
        'description' => 'Outputs one random testimonial'
    )
);

function ora_display_random_testimonial_widget( $args ) {
    // WP_Query arguments
    $random_testimonial_args = array (
        'post_type'              => array( 'testimonial' ),
        'nopaging'               => false,
        'posts_per_page'         => '1',
        'orderby'                => 'rand'
    );

    // The Query
    $random_testimonial_query = new WP_Query( $random_testimonial_args );

    // The Loop
    if ( $random_testimonial_query->have_posts() ) {
        echo $args['before_widget'];
        while ( $random_testimonial_query->have_posts() ) {
            $random_testimonial_query->the_post();
            ob_start();
            the_content();
            $content = ob_get_clean();

            echo '<article class="testimonial single">';
            // post thumbnail
            if ( has_post_thumbnail() ) {
                the_post_thumbnail( array( 80, 80 ), array( 'class' => 'testimonial-thumb' ) );
            }

            // content
            echo '<div class="testimonial-content-wrapper"><div class="testimonial-content">' . $content . '</div>
            <p class="testimonial-title alternate">' . get_the_title() . ', ' . get_post_meta( get_the_ID(), 'personal_info_location', true ) . '</div>';

            echo '</article>';
        }
        echo $args['after_widget'];
    }

    // Restore original Post Data
    wp_reset_postdata();
}

/**
 * Show post IDs on testimonial admin screen for use in shortcode
 */
add_filter('manage_testimonial_posts_columns' , 'ora_testimonial_columns_head');
function ora_testimonial_columns_head( $defaults ) {
    $defaults['ID'] = 'ID';

    return $defaults;
}

add_action( 'manage_testimonial_posts_custom_column', 'ora_testimonial_columns_body', 10, 2 );
function ora_testimonial_columns_body( $column_name, $post_id ) {
    if ( 'ID' == $column_name ) {
        echo $post_id;
    }
}

/**
 * Testimonial shortcode
 */
// Add Shortcode
function ora_testimonial_shortcode( $atts ) {

    // Attributes
    extract( shortcode_atts(
        array(
            'id'             => '',
            'content_only'   => false,
            'blockquote'     => false,
        ), $atts )
    );

    // WP_Query arguments
    $args = array (
        'post_type'              => array( 'testimonial' ),
        'pagination'             => false,
        'posts_per_page'         => '1',
    );
    if ( $id ) {
        $args['p'] = $id;
    }

    // The Query
    $testimonial_query = new WP_Query( $args );

    // The Loop
    if ( $testimonial_query->have_posts() ) {
        $shortcode_content = NULL;

        while ( $testimonial_query->have_posts() ) {
            $testimonial_query->the_post();
            ob_start();
            the_content();
            $content = ob_get_clean();

            if ( $blockquote ) {
                $shortcode_content .= '<blockquote class="testimonial single">';
            } elseif ( ! $content_only ) {
                $shortcode_content .= '<aside class="testimonial single shortcode">';
            }
            // post thumbnail
            if ( has_post_thumbnail() && ! $blockquote ) {
                $shortcode_content .= get_the_post_thumbnail( $id, array( 80, 80 ), array( 'class' => 'testimonial-thumb' ) );
            }

            // content
            $shortcode_content .= '<div class="testimonial-content-wrapper"><div class="testimonial-content">' . $content . '</div>
            <p class="testimonial-title alternate">' . get_the_title() . ', ' . get_post_meta( get_the_ID(), 'personal_info_location', true );

            // thumbnail (blockquote)
            if ( has_post_thumbnail() && $blockquote ) {
                $shortcode_content .= get_the_post_thumbnail( $id, array( 80, 80 ), array( 'class' => 'testimonial-thumb' ) );
            }

            $shortcode_content .= '</p>';

            if ( $blockquote ) {
                $shortcode_content .= '</blockquote>';
            } elseif ( ! $content_only ) {
                $shortcode_content .= '</aside>';
            }
        }
    }

    // Restore original Post Data
    wp_reset_postdata();

    return $shortcode_content;
}
add_shortcode( 'testimonial', 'ora_testimonial_shortcode' );
